name: Podman Push

on:
  workflow_run:
    workflows:
      - 'PR Build Image'
    types:
      - completed
  workflow_call:
    inputs:
      buildId:
        type: string
        description: The build identifier for artifact naming (e.g., PR number, 'nightly', 'main')
        required: false
      shortSha:
        type: string
        description: The short SHA for artifact naming
        required: false
      registry:
        type: string
        description: The registry to push to
        required: false
        default: quay.io

jobs:
  docker-push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    
    steps:
      - name: Determine artifact name
        run: |
          if [ "${{ github.event_name }}" == "workflow_run" ]; then
            # For workflow_run, extract from the event context
            BUILD_ID="${{ github.event.workflow_run.pull_requests[0].number || 'main' }}"
            SHORT_SHA="${{ github.event.workflow_run.head_sha }}"
            SHORT_SHA="${SHORT_SHA:0:8}"
          else
            # For workflow_call, use the inputs
            BUILD_ID="${{ inputs.buildId || 'main' }}"
            SHORT_SHA="${{ inputs.shortSha }}"
          fi
          
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          ARTIFACT_NAME="podman-image-${BUILD_ID}-${SHORT_SHA}"
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
          echo "Using artifact name: $ARTIFACT_NAME"

      - name: Download Image Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./rhdh-podman-artifacts
          run-id: ${{ github.event.workflow_run.id || github.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Load and prepare image
        run: |
          # Check if artifacts exist
          if [ ! -f "./rhdh-podman-artifacts/image.tar" ]; then
            echo "Error: image.tar not found in artifacts"
            exit 1
          fi
          
          # Load the image from tar file (contains all tags)
          podman load -i ./rhdh-podman-artifacts/image.tar
          
          # Read metadata
          REGISTRY=$(cat ./rhdh-podman-artifacts/registry.txt)
          IMAGE_NAME=$(cat ./rhdh-podman-artifacts/imageName.txt)
          TAGS_LIST=$(cat ./rhdh-podman-artifacts/tags.txt)
          
          echo "REGISTRY=$REGISTRY" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          
          echo "Loaded images:"
          podman images
          
          echo "Full tags from metadata:"
          echo "$TAGS_LIST"
          echo "TAGS_LIST=$TAGS_LIST" >> $GITHUB_ENV
          
      - name: Push Images
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2.8
        with:
          tags: ${{ env.TAGS_LIST }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Extract PR info for commenting
        if: ${{ github.event_name == 'workflow_run' }}
        env:
          WORKFLOW_RUN_PR_NUMBER: ${{ github.event.workflow_run.pull_requests[0].number || '' }}
          WORKFLOW_RUN_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
        run: |
          if [ -n "$WORKFLOW_RUN_PR_NUMBER" ]; then
            echo "PR_NUMBER=$WORKFLOW_RUN_PR_NUMBER" >> $GITHUB_ENV
          else
            echo "No PR number found in workflow_run context"
          fi

      - name: Comment the image pull link
        if: ${{ github.event_name == 'workflow_run' && env.PR_NUMBER }}
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ env.PR_NUMBER }}';
            const shortSha = '${{ env.SHORT_SHA }}';
            
            if (!prNumber) {
              console.log('No pull request number found');
              return;
            }
            
            github.rest.issues.createComment({
              issue_number: parseInt(prNumber),
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `The image is available at:\n* [\`quay.io/rhdh-community/rhdh:pr-${prNumber}\`](https://quay.io/rhdh-community/rhdh:pr-${prNumber}) or\n* [\`quay.io/rhdh-community/rhdh:pr-${prNumber}-${shortSha}\`](https://quay.io/rhdh-community/rhdh:pr-${prNumber}-${shortSha})`
            })
